/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_pages-dir-browser_components_LDrawCodeEditor_tsx"],{

/***/ "(pages-dir-browser)/./components/LDrawCodeEditor.tsx":
/*!****************************************!*\
  !*** ./components/LDrawCodeEditor.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"(pages-dir-browser)/./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _s = $RefreshSig$();\n\n\nconst LDrawCodeEditor = (param)=>{\n    let { onModelGenerated } = param;\n    _s();\n    const [filename, setFilename] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('my_model');\n    const [livePreview, setLivePreview] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const [code, setCode] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"// Create a simple car with step-by-step building instructions\\n// Available colors: BLACK, BLUE, GREEN, RED, YELLOW, WHITE, etc.\\n\\n// Create a new builder\\nconst builder = new LDrawBuilder('Step-by-Step Car');\\nbuilder.setAuthor('Code Generator');\\n\\n// Step 1: Car base\\nbuilder.addPlate('3035', Colors.RED, 0, 0, 0);\\nbuilder.addStep(); // Mark the end of step 1\\n\\n// Step 2: Add front wheels\\nbuilder.addPart('4600', Colors.BLACK, -20, 8, -30);\\nbuilder.addWheel('3641', -20, 8, -30);\\nbuilder.addPart('4600', Colors.BLACK, 20, 8, -30);\\nbuilder.addWheel('3641', 20, 8, -30);\\nbuilder.addStep(); // Mark the end of step 2\\n\\n// Step 3: Add back wheels\\nbuilder.addPart('4600', Colors.BLACK, -20, 8, 30);\\nbuilder.addWheel('3641', -20, 8, 30);\\nbuilder.addPart('4600', Colors.BLACK, 20, 8, 30);\\nbuilder.addWheel('3641', 20, 8, 30);\\nbuilder.addStep(); // Mark the end of step 3\\n\\n// Step 4: Car body\\nbuilder.addBrick('3001', Colors.RED, 0, -8, -20);\\nbuilder.addBrick('3001', Colors.RED, 0, -8, 20);\\nbuilder.addStep(); // Mark the end of step 4\\n\\n// Step 5: Windshield and roof\\nbuilder.addPart('3039', Colors.TRANS_CLEAR, 0, -16, -20);\\nbuilder.addPlate('3020', Colors.RED, 0, -24, 0);\\n// No need to call addStep() at the end - it's added automatically\\n\\n// Save the model (uses filename from input field above)\\n// Or you can specify a custom name: builder.save('my_car');\\nbuilder.save();\\n\\n// For live preview compatibility, also return the content\\nreturn builder.getContent();\");\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)('');\n    const [isExecuting, setIsExecuting] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const textareaRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const debounceTimerRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    // Handle tab key for indentation\n    const handleKeyDown = (e)=>{\n        if (e.key === 'Tab') {\n            e.preventDefault();\n            const start = e.currentTarget.selectionStart;\n            const end = e.currentTarget.selectionEnd;\n            const newCode = code.substring(0, start) + '  ' + code.substring(end);\n            setCode(newCode);\n            // Set cursor position after the tab\n            setTimeout(()=>{\n                if (textareaRef.current) {\n                    textareaRef.current.selectionStart = start + 2;\n                    textareaRef.current.selectionEnd = start + 2;\n                }\n            }, 0);\n        }\n    };\n    // Execute the code\n    const executeCode = async function() {\n        let isLivePreview = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        console.log(\"[LDrawCodeEditor] Executing code - Live Preview: \".concat(isLivePreview));\n        setError('');\n        if (!isLivePreview) {\n            setIsExecuting(true);\n        }\n        try {\n            // Create a sandboxed function that can optionally return content\n            const func = new Function('LDrawBuilder', 'Colors', code);\n            console.log('[LDrawCodeEditor] Code compiled successfully');\n            // Create a special version of LDrawBuilder with save method\n            const LDrawBuilder = createLDrawBuilderClass(isLivePreview);\n            const Colors = {\n                BLACK: 0,\n                BLUE: 1,\n                GREEN: 2,\n                DARK_TURQUOISE: 3,\n                RED: 4,\n                DARK_PINK: 5,\n                BROWN: 6,\n                LIGHT_GRAY: 7,\n                DARK_GRAY: 8,\n                LIGHT_BLUE: 9,\n                BRIGHT_GREEN: 10,\n                LIGHT_TURQUOISE: 11,\n                SALMON: 12,\n                PINK: 13,\n                YELLOW: 14,\n                WHITE: 15,\n                MAIN_COLOR: 16,\n                LIGHT_GREEN: 17,\n                LIGHT_YELLOW: 18,\n                TAN: 19,\n                LIGHT_VIOLET: 20,\n                TRANS_CLEAR: 47,\n                TRANS_RED: 36,\n                TRANS_LIGHT_BLUE: 43\n            };\n            const result = func(LDrawBuilder, Colors);\n            console.log('[LDrawCodeEditor] Code execution result type:', typeof result);\n            // Only process explicit returns for live preview\n            if (isLivePreview && typeof result === 'string') {\n                console.log('[LDrawCodeEditor] Live preview - generating model, content length:', result.length);\n                // For live preview, always use a temp file name and mark as preview\n                onModelGenerated(result, 'preview_temp', true);\n            } else if (!isLivePreview && typeof result === 'string') {\n                // Manual generation with return statement\n                const sanitizedFilename = filename.trim() || 'generated_model';\n                console.log(\"[LDrawCodeEditor] Manual generation - saving as \".concat(sanitizedFilename));\n                onModelGenerated(result, sanitizedFilename, false);\n                console.log('Generated LDraw model successfully');\n            } else if (isLivePreview && typeof result !== 'string') {\n                console.log('[LDrawCodeEditor] Live preview - no return value, save() method may have been called');\n            }\n        // If no return value, the save() method handles it (see createLDrawBuilderClass)\n        } catch (err) {\n            setError(err instanceof Error ? err.message : 'Unknown error occurred');\n            if (!isLivePreview) {\n                console.error('Code execution error:', err);\n            }\n        } finally{\n            if (!isLivePreview) {\n                setIsExecuting(false);\n            }\n        }\n    };\n    // Effect for live preview with debouncing\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"LDrawCodeEditor.useEffect\": ()=>{\n            if (!livePreview) {\n                console.log('[LDrawCodeEditor] Live preview is disabled, skipping auto-execution');\n                return;\n            }\n            console.log('[LDrawCodeEditor] Code changed, setting up debounce timer');\n            // Clear previous timer\n            if (debounceTimerRef.current) {\n                clearTimeout(debounceTimerRef.current);\n            }\n            // Set new timer for debounced execution\n            debounceTimerRef.current = setTimeout({\n                \"LDrawCodeEditor.useEffect\": ()=>{\n                    console.log('[LDrawCodeEditor] Debounce timer fired, executing code');\n                    executeCode(true);\n                }\n            }[\"LDrawCodeEditor.useEffect\"], 5000); // 1 second delay after user stops typing\n            // Cleanup\n            return ({\n                \"LDrawCodeEditor.useEffect\": ()=>{\n                    if (debounceTimerRef.current) {\n                        clearTimeout(debounceTimerRef.current);\n                    }\n                }\n            })[\"LDrawCodeEditor.useEffect\"];\n        }\n    }[\"LDrawCodeEditor.useEffect\"], [\n        code,\n        livePreview\n    ]);\n    // Initial execution when component mounts\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"LDrawCodeEditor.useEffect\": ()=>{\n            console.log('[LDrawCodeEditor] Component mounted, live preview:', livePreview);\n            if (livePreview) {\n                console.log('[LDrawCodeEditor] Executing initial code');\n                executeCode(true);\n            }\n        }\n    }[\"LDrawCodeEditor.useEffect\"], []);\n    // Create the LDrawBuilder class in the browser\n    const createLDrawBuilderClass = (isLivePreview)=>{\n        return class LDrawBuilder {\n            setModelName(name) {\n                this.modelName = name;\n                return this;\n            }\n            setAuthor(author) {\n                this.author = author;\n                return this;\n            }\n            setColor(colorCode) {\n                this.currentColor = colorCode;\n                return this;\n            }\n            addStep() {\n                // Only add step if there are parts since the last step\n                if (this.elements.length > 0) {\n                    const lastElement = this.elements[this.elements.length - 1];\n                    // Don't add duplicate steps\n                    if (!('command' in lastElement) || lastElement.command !== 'STEP') {\n                        this.elements.push({\n                            lineType: 0,\n                            command: 'STEP'\n                        });\n                    }\n                }\n                return this;\n            }\n            addPart(partNum, color, x, y, z) {\n                let a = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 1, b = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 0, c = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : 0, d = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : 0, e = arguments.length > 9 && arguments[9] !== void 0 ? arguments[9] : 1, f = arguments.length > 10 && arguments[10] !== void 0 ? arguments[10] : 0, g = arguments.length > 11 && arguments[11] !== void 0 ? arguments[11] : 0, h = arguments.length > 12 && arguments[12] !== void 0 ? arguments[12] : 0, i = arguments.length > 13 && arguments[13] !== void 0 ? arguments[13] : 1;\n                this.elements.push({\n                    lineType: 1,\n                    color,\n                    x,\n                    y,\n                    z,\n                    a,\n                    b,\n                    c,\n                    d,\n                    e,\n                    f,\n                    g,\n                    h,\n                    i,\n                    partName: \"\".concat(partNum, \".dat\")\n                });\n                return this;\n            }\n            addBrick(partNum, color, x, y, z) {\n                return this.addPart(partNum, color, x, y, z);\n            }\n            addPlate(partNum, color, x, y, z) {\n                return this.addPart(partNum, color, x, y, z);\n            }\n            addWheel(partNum, x, y, z) {\n                return this.addPart(partNum, 0, x, y, z);\n            }\n            addPartRotatedY90(partNum, color, x, y, z) {\n                return this.addPart(partNum, color, x, y, z, 0, 0, -1, 0, 1, 0, 1, 0, 0);\n            }\n            addPartRotatedX90(partNum, color, x, y, z) {\n                return this.addPart(partNum, color, x, y, z, 1, 0, 0, 0, 0, -1, 0, 1, 0);\n            }\n            generateLDraw() {\n                const lines = [];\n                lines.push(\"0 \".concat(this.modelName));\n                lines.push(\"0 Name: generated.ldr\");\n                lines.push(\"0 Author: \".concat(this.author));\n                lines.push(\"0 !LICENSE Licensed under CC BY 4.0\");\n                lines.push('');\n                lines.push('0 BFC CERTIFY CCW');\n                lines.push('');\n                for (const element of this.elements){\n                    if ('command' in element && element.command === 'STEP') {\n                        // Add step marker\n                        lines.push('0 STEP');\n                        lines.push(''); // Add blank line after step for readability\n                    } else if ('partName' in element) {\n                        // Add part\n                        const line = \"1 \".concat(element.color, \" \").concat(element.x, \" \").concat(element.y, \" \").concat(element.z, \" \").concat(element.a, \" \").concat(element.b, \" \").concat(element.c, \" \").concat(element.d, \" \").concat(element.e, \" \").concat(element.f, \" \").concat(element.g, \" \").concat(element.h, \" \").concat(element.i, \" \").concat(element.partName);\n                        lines.push(line);\n                    }\n                }\n                // Add final step command if not already present\n                const lastElement = this.elements[this.elements.length - 1];\n                if (!lastElement || !('command' in lastElement) || lastElement.command !== 'STEP') {\n                    lines.push('0 STEP');\n                }\n                lines.push('');\n                return lines.join('\\n');\n            }\n            clear() {\n                this.elements = [];\n                return this;\n            }\n            getPartCount() {\n                return this.elements.filter((el)=>'partName' in el).length;\n            }\n            getContent() {\n                return this.generateLDraw();\n            }\n            save(saveFilename) {\n                // In browser context, save triggers the model generation\n                const content = this.generateLDraw();\n                const finalFilename = saveFilename || filename || 'generated_model';\n                console.log(\"[LDrawBuilder.save] Called with filename: \".concat(saveFilename, \", isLivePreview: \").concat(isLivePreview));\n                console.log(\"[LDrawBuilder.save] Generated content length: \".concat(content.length));\n                if (!isLivePreview) {\n                    // Only actually save when not in live preview mode\n                    console.log(\"[LDrawBuilder.save] Saving model as \".concat(finalFilename, \".ldr\"));\n                    onModelGenerated(content, finalFilename, false);\n                    console.log(\"Model saved as \".concat(finalFilename, \".ldr\"));\n                } else {\n                    // In live preview, use temp file\n                    console.log('[LDrawBuilder.save] Live preview mode - saving to preview_temp');\n                    onModelGenerated(content, 'preview_temp', true);\n                }\n            }\n            constructor(modelName){\n                this.elements = [];\n                this.currentColor = 16;\n                this.modelName = 'Untitled Model';\n                this.author = 'AI Builder';\n                if (modelName) {\n                    this.modelName = modelName;\n                }\n            }\n        };\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"bcb2c6676c329f81\",\n                children: \"@keyframes pulse{0%{opacity:1}50%{opacity:.3}100%{opacity:1}}\"\n            }, void 0, false, void 0, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: '100%',\n                    backgroundColor: '#1e1e1e',\n                    borderRadius: '8px',\n                    overflow: 'hidden'\n                },\n                className: \"jsx-bcb2c6676c329f81\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            padding: '10px',\n                            backgroundColor: '#2d2d2d',\n                            borderBottom: '1px solid #3e3e3e',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            gap: '10px'\n                        },\n                        className: \"jsx-bcb2c6676c329f81\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                style: {\n                                    margin: 0,\n                                    color: '#e0e0e0',\n                                    fontSize: '14px',\n                                    flexShrink: 0\n                                },\n                                className: \"jsx-bcb2c6676c329f81\",\n                                children: \"LDraw Code Editor\"\n                            }, void 0, false, {\n                                fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                                lineNumber: 376,\n                                columnNumber: 9\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: '10px'\n                                },\n                                className: \"jsx-bcb2c6676c329f81\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    style: {\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        gap: '6px',\n                                        color: '#a0a0a0',\n                                        fontSize: '13px',\n                                        cursor: 'pointer'\n                                    },\n                                    className: \"jsx-bcb2c6676c329f81\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"checkbox\",\n                                            checked: livePreview,\n                                            onChange: (e)=>setLivePreview(e.target.checked),\n                                            style: {\n                                                cursor: 'pointer'\n                                            },\n                                            className: \"jsx-bcb2c6676c329f81\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                                            lineNumber: 393,\n                                            columnNumber: 13\n                                        }, undefined),\n                                        \"Live Preview\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                                    lineNumber: 385,\n                                    columnNumber: 11\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                                lineNumber: 380,\n                                columnNumber: 9\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: '8px',\n                                    flex: 1,\n                                    maxWidth: '400px'\n                                },\n                                className: \"jsx-bcb2c6676c329f81\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        style: {\n                                            color: '#a0a0a0',\n                                            fontSize: '13px',\n                                            flexShrink: 0\n                                        },\n                                        className: \"jsx-bcb2c6676c329f81\",\n                                        children: \"Filename:\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                                        lineNumber: 412,\n                                        columnNumber: 11\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                        type: \"text\",\n                                        value: filename,\n                                        onChange: (e)=>setFilename(e.target.value),\n                                        placeholder: \"my_model\",\n                                        style: {\n                                            flex: 1,\n                                            padding: '4px 8px',\n                                            backgroundColor: '#1e1e1e',\n                                            color: '#d4d4d4',\n                                            border: '1px solid #3e3e3e',\n                                            borderRadius: '4px',\n                                            fontSize: '13px',\n                                            outline: 'none'\n                                        },\n                                        onFocus: (e)=>e.target.style.borderColor = '#0e7490',\n                                        onBlur: (e)=>e.target.style.borderColor = '#3e3e3e',\n                                        className: \"jsx-bcb2c6676c329f81\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                                        lineNumber: 419,\n                                        columnNumber: 11\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        style: {\n                                            color: '#707070',\n                                            fontSize: '13px'\n                                        },\n                                        className: \"jsx-bcb2c6676c329f81\",\n                                        children: \".ldr\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                                        lineNumber: 437,\n                                        columnNumber: 11\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                                lineNumber: 405,\n                                columnNumber: 9\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>executeCode(false),\n                                disabled: isExecuting || livePreview,\n                                style: {\n                                    padding: '6px 12px',\n                                    backgroundColor: isExecuting || livePreview ? '#4a4a4a' : '#0e7490',\n                                    color: 'white',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    cursor: isExecuting || livePreview ? 'not-allowed' : 'pointer',\n                                    fontSize: '14px',\n                                    transition: 'background-color 0.2s',\n                                    opacity: livePreview ? 0.5 : 1\n                                },\n                                onMouseEnter: (e)=>{\n                                    if (!isExecuting && !livePreview) {\n                                        e.currentTarget.style.backgroundColor = '#0891b2';\n                                    }\n                                },\n                                onMouseLeave: (e)=>{\n                                    if (!isExecuting && !livePreview) {\n                                        e.currentTarget.style.backgroundColor = '#0e7490';\n                                    }\n                                },\n                                title: livePreview ? 'Disable live preview to manually generate' : '',\n                                className: \"jsx-bcb2c6676c329f81\",\n                                children: isExecuting ? 'Generating...' : '▶ Generate Model'\n                            }, void 0, false, {\n                                fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                                lineNumber: 445,\n                                columnNumber: 9\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                        lineNumber: 367,\n                        columnNumber: 7\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            flex: 1,\n                            position: 'relative',\n                            overflow: 'auto'\n                        },\n                        className: \"jsx-bcb2c6676c329f81\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n                            ref: textareaRef,\n                            value: code,\n                            onChange: (e)=>setCode(e.target.value),\n                            onKeyDown: handleKeyDown,\n                            spellCheck: false,\n                            style: {\n                                width: '100%',\n                                height: '100%',\n                                padding: '12px',\n                                backgroundColor: '#1e1e1e',\n                                color: '#d4d4d4',\n                                border: 'none',\n                                outline: 'none',\n                                fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\n                                fontSize: '13px',\n                                lineHeight: '1.5',\n                                resize: 'none',\n                                tabSize: 2\n                            },\n                            placeholder: \"Write your LDraw generation code here...\",\n                            className: \"jsx-bcb2c6676c329f81\"\n                        }, void 0, false, {\n                            fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                            lineNumber: 480,\n                            columnNumber: 9\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                        lineNumber: 475,\n                        columnNumber: 7\n                    }, undefined),\n                    error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            padding: '10px',\n                            backgroundColor: '#3e1e1e',\n                            borderTop: '1px solid #5e2e2e',\n                            color: '#f87171',\n                            fontSize: '12px',\n                            fontFamily: 'Consolas, Monaco, \"Courier New\", monospace'\n                        },\n                        className: \"jsx-bcb2c6676c329f81\",\n                        children: [\n                            \"Error: \",\n                            error\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                        lineNumber: 505,\n                        columnNumber: 9\n                    }, undefined),\n                    livePreview && !error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            padding: '8px',\n                            backgroundColor: '#1e3e1e',\n                            borderTop: '1px solid #2e5e2e',\n                            color: '#71f871',\n                            fontSize: '11px',\n                            fontFamily: 'Consolas, Monaco, \"Courier New\", monospace',\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: '6px'\n                        },\n                        className: \"jsx-bcb2c6676c329f81\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                style: {\n                                    display: 'inline-block',\n                                    width: '8px',\n                                    height: '8px',\n                                    backgroundColor: '#71f871',\n                                    borderRadius: '50%',\n                                    animation: 'pulse 2s infinite'\n                                },\n                                className: \"jsx-bcb2c6676c329f81\"\n                            }, void 0, false, {\n                                fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                                lineNumber: 529,\n                                columnNumber: 11\n                            }, undefined),\n                            \"Live preview enabled - Model updates as you type\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                        lineNumber: 518,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/gnome/lego/brickyard/components/LDrawCodeEditor.tsx\",\n                lineNumber: 359,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_s(LDrawCodeEditor, \"msq0OGYqQS871mWShK6aOwXosns=\");\n_c = LDrawCodeEditor;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LDrawCodeEditor);\nvar _c;\n$RefreshReg$(_c, \"LDrawCodeEditor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2NvbXBvbmVudHMvTERyYXdDb2RlRWRpdG9yLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTJEO0FBTTNELE1BQU1JLGtCQUFrRDtRQUFDLEVBQUVDLGdCQUFnQixFQUFFOztJQUMzRSxNQUFNLENBQUNDLFVBQVVDLFlBQVksR0FBR04sK0NBQVFBLENBQVM7SUFDakQsTUFBTSxDQUFDTyxhQUFhQyxlQUFlLEdBQUdSLCtDQUFRQSxDQUFVO0lBQ3hELE1BQU0sQ0FBQ1MsTUFBTUMsUUFBUSxHQUFHViwrQ0FBUUEsQ0FBVTtJQTBDMUMsTUFBTSxDQUFDVyxPQUFPQyxTQUFTLEdBQUdaLCtDQUFRQSxDQUFTO0lBQzNDLE1BQU0sQ0FBQ2EsYUFBYUMsZUFBZSxHQUFHZCwrQ0FBUUEsQ0FBVTtJQUN4RCxNQUFNZSxjQUFjZCw2Q0FBTUEsQ0FBc0I7SUFDaEQsTUFBTWUsbUJBQW1CZiw2Q0FBTUEsQ0FBd0I7SUFFdkQsaUNBQWlDO0lBQ2pDLE1BQU1nQixnQkFBZ0IsQ0FBQ0M7UUFDckIsSUFBSUEsRUFBRUMsR0FBRyxLQUFLLE9BQU87WUFDbkJELEVBQUVFLGNBQWM7WUFDaEIsTUFBTUMsUUFBUUgsRUFBRUksYUFBYSxDQUFDQyxjQUFjO1lBQzVDLE1BQU1DLE1BQU1OLEVBQUVJLGFBQWEsQ0FBQ0csWUFBWTtZQUN4QyxNQUFNQyxVQUFVakIsS0FBS2tCLFNBQVMsQ0FBQyxHQUFHTixTQUFTLE9BQU9aLEtBQUtrQixTQUFTLENBQUNIO1lBQ2pFZCxRQUFRZ0I7WUFFUixvQ0FBb0M7WUFDcENFLFdBQVc7Z0JBQ1QsSUFBSWIsWUFBWWMsT0FBTyxFQUFFO29CQUN2QmQsWUFBWWMsT0FBTyxDQUFDTixjQUFjLEdBQUdGLFFBQVE7b0JBQzdDTixZQUFZYyxPQUFPLENBQUNKLFlBQVksR0FBR0osUUFBUTtnQkFDN0M7WUFDRixHQUFHO1FBQ0w7SUFDRjtJQUVBLG1CQUFtQjtJQUNuQixNQUFNUyxjQUFjO1lBQU9DLGlGQUFn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Q0FDRSw4REFBQ3FCO2dDQUFLaEMsT0FBTztvQ0FDWEMsU0FBUztvQ0FDVDZDLE9BQU87b0NBQ1AzQyxRQUFRO29DQUNSQyxpQkFBaUI7b0NBQ2pCQyxjQUFjO29DQUNkK0MsV0FBVztnQ0FDYjs7Ozs7Ozs0QkFBVTs7Ozs7Ozs7Ozs7Ozs7O0FBT3BCO0dBeGhCTXpLO0tBQUFBO0FBMGhCTixpRUFBZUEsZUFBZUEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2dub21lL2xlZ28vYnJpY2t5YXJkL2NvbXBvbmVudHMvTERyYXdDb2RlRWRpdG9yLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5cclxuaW50ZXJmYWNlIExEcmF3Q29kZUVkaXRvclByb3BzIHtcclxuICBvbk1vZGVsR2VuZXJhdGVkOiAobGRyYXdDb250ZW50OiBzdHJpbmcsIGZpbGVuYW1lPzogc3RyaW5nLCBpc1ByZXZpZXc/OiBib29sZWFuKSA9PiB2b2lkO1xyXG59XHJcblxyXG5jb25zdCBMRHJhd0NvZGVFZGl0b3I6IFJlYWN0LkZDPExEcmF3Q29kZUVkaXRvclByb3BzPiA9ICh7IG9uTW9kZWxHZW5lcmF0ZWQgfSkgPT4ge1xyXG4gIGNvbnN0IFtmaWxlbmFtZSwgc2V0RmlsZW5hbWVdID0gdXNlU3RhdGU8c3RyaW5nPignbXlfbW9kZWwnKTtcclxuICBjb25zdCBbbGl2ZVByZXZpZXcsIHNldExpdmVQcmV2aWV3XSA9IHVzZVN0YXRlPGJvb2xlYW4+KHRydWUpO1xyXG4gIGNvbnN0IFtjb2RlLCBzZXRDb2RlXSA9IHVzZVN0YXRlPHN0cmluZz4oYC8vIENyZWF0ZSBhIHNpbXBsZSBjYXIgd2l0aCBzdGVwLWJ5LXN0ZXAgYnVpbGRpbmcgaW5zdHJ1Y3Rpb25zXHJcbi8vIEF2YWlsYWJsZSBjb2xvcnM6IEJMQUNLLCBCTFVFLCBHUkVFTiwgUkVELCBZRUxMT1csIFdISVRFLCBldGMuXHJcblxyXG4vLyBDcmVhdGUgYSBuZXcgYnVpbGRlclxyXG5jb25zdCBidWlsZGVyID0gbmV3IExEcmF3QnVpbGRlcignU3RlcC1ieS1TdGVwIENhcicpO1xyXG5idWlsZGVyLnNldEF1dGhvcignQ29kZSBHZW5lcmF0b3InKTtcclxuXHJcbi8vIFN0ZXAgMTogQ2FyIGJhc2VcclxuYnVpbGRlci5hZGRQbGF0ZSgnMzAzNScsIENvbG9ycy5SRUQsIDAsIDAsIDApO1xyXG5idWlsZGVyLmFkZFN0ZXAoKTsgLy8gTWFyayB0aGUgZW5kIG9mIHN0ZXAgMVxyXG5cclxuLy8gU3RlcCAyOiBBZGQgZnJvbnQgd2hlZWxzXHJcbmJ1aWxkZXIuYWRkUGFydCgnNDYwMCcsIENvbG9ycy5CTEFDSywgLTIwLCA4LCAtMzApO1xyXG5idWlsZGVyLmFkZFdoZWVsKCczNjQxJywgLTIwLCA4LCAtMzApO1xyXG5idWlsZGVyLmFkZFBhcnQoJzQ2MDAnLCBDb2xvcnMuQkxBQ0ssIDIwLCA4LCAtMzApO1xyXG5idWlsZGVyLmFkZFdoZWVsKCczNjQxJywgMjAsIDgsIC0zMCk7XHJcbmJ1aWxkZXIuYWRkU3RlcCgpOyAvLyBNYXJrIHRoZSBlbmQgb2Ygc3RlcCAyXHJcblxyXG4vLyBTdGVwIDM6IEFkZCBiYWNrIHdoZWVsc1xyXG5idWlsZGVyLmFkZFBhcnQoJzQ2MDAnLCBDb2xvcnMuQkxBQ0ssIC0yMCwgOCwgMzApO1xyXG5idWlsZGVyLmFkZFdoZWVsKCczNjQxJywgLTIwLCA4LCAzMCk7XHJcbmJ1aWxkZXIuYWRkUGFydCgnNDYwMCcsIENvbG9ycy5CTEFDSywgMjAsIDgsIDMwKTtcclxuYnVpbGRlci5hZGRXaGVlbCgnMzY0MScsIDIwLCA4LCAzMCk7XHJcbmJ1aWxkZXIuYWRkU3RlcCgpOyAvLyBNYXJrIHRoZSBlbmQgb2Ygc3RlcCAzXHJcblxyXG4vLyBTdGVwIDQ6IENhciBib2R5XHJcbmJ1aWxkZXIuYWRkQnJpY2soJzMwMDEnLCBDb2xvcnMuUkVELCAwLCAtOCwgLTIwKTtcclxuYnVpbGRlci5hZGRCcmljaygnMzAwMScsIENvbG9ycy5SRUQsIDAsIC04LCAyMCk7XHJcbmJ1aWxkZXIuYWRkU3RlcCgpOyAvLyBNYXJrIHRoZSBlbmQgb2Ygc3RlcCA0XHJcblxyXG4vLyBTdGVwIDU6IFdpbmRzaGllbGQgYW5kIHJvb2ZcclxuYnVpbGRlci5hZGRQYXJ0KCczMDM5JywgQ29sb3JzLlRSQU5TX0NMRUFSLCAwLCAtMTYsIC0yMCk7XHJcbmJ1aWxkZXIuYWRkUGxhdGUoJzMwMjAnLCBDb2xvcnMuUkVELCAwLCAtMjQsIDApO1xyXG4vLyBObyBuZWVkIHRvIGNhbGwgYWRkU3RlcCgpIGF0IHRoZSBlbmQgLSBpdCdzIGFkZGVkIGF1dG9tYXRpY2FsbHlcclxuXHJcbi8vIFNhdmUgdGhlIG1vZGVsICh1c2VzIGZpbGVuYW1lIGZyb20gaW5wdXQgZmllbGQgYWJvdmUpXHJcbi8vIE9yIHlvdSBjYW4gc3BlY2lmeSBhIGN1c3RvbSBuYW1lOiBidWlsZGVyLnNhdmUoJ215X2NhcicpO1xyXG5idWlsZGVyLnNhdmUoKTtcclxuXHJcbi8vIEZvciBsaXZlIHByZXZpZXcgY29tcGF0aWJpbGl0eSwgYWxzbyByZXR1cm4gdGhlIGNvbnRlbnRcclxucmV0dXJuIGJ1aWxkZXIuZ2V0Q29udGVudCgpO2ApO1xyXG5cclxuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZz4oJycpO1xyXG4gIGNvbnN0IFtpc0V4ZWN1dGluZywgc2V0SXNFeGVjdXRpbmddID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xyXG4gIGNvbnN0IHRleHRhcmVhUmVmID0gdXNlUmVmPEhUTUxUZXh0QXJlYUVsZW1lbnQ+KG51bGwpO1xyXG4gIGNvbnN0IGRlYm91bmNlVGltZXJSZWYgPSB1c2VSZWY8Tm9kZUpTLlRpbWVvdXQgfCBudWxsPihudWxsKTtcclxuXHJcbiAgLy8gSGFuZGxlIHRhYiBrZXkgZm9yIGluZGVudGF0aW9uXHJcbiAgY29uc3QgaGFuZGxlS2V5RG93biA9IChlOiBSZWFjdC5LZXlib2FyZEV2ZW50PEhUTUxUZXh0QXJlYUVsZW1lbnQ+KSA9PiB7XHJcbiAgICBpZiAoZS5rZXkgPT09ICdUYWInKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgY29uc3Qgc3RhcnQgPSBlLmN1cnJlbnRUYXJnZXQuc2VsZWN0aW9uU3RhcnQ7XHJcbiAgICAgIGNvbnN0IGVuZCA9IGUuY3VycmVudFRhcmdldC5zZWxlY3Rpb25FbmQ7XHJcbiAgICAgIGNvbnN0IG5ld0NvZGUgPSBjb2RlLnN1YnN0cmluZygwLCBzdGFydCkgKyAnICAnICsgY29kZS5zdWJzdHJpbmcoZW5kKTtcclxuICAgICAgc2V0Q29kZShuZXdDb2RlKTtcclxuXHJcbiAgICAgIC8vIFNldCBjdXJzb3IgcG9zaXRpb24gYWZ0ZXIgdGhlIHRhYlxyXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBpZiAodGV4dGFyZWFSZWYuY3VycmVudCkge1xyXG4gICAgICAgICAgdGV4dGFyZWFSZWYuY3VycmVudC5zZWxlY3Rpb25TdGFydCA9IHN0YXJ0ICsgMjtcclxuICAgICAgICAgIHRleHRhcmVhUmVmLmN1cnJlbnQuc2VsZWN0aW9uRW5kID0gc3RhcnQgKyAyO1xyXG4gICAgICAgIH1cclxuICAgICAgfSwgMCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgLy8gRXhlY3V0ZSB0aGUgY29kZVxyXG4gIGNvbnN0IGV4ZWN1dGVDb2RlID0gYXN5bmMgKGlzTGl2ZVByZXZpZXcgPSBmYWxzZSkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYFtMRHJhd0NvZGVFZGl0b3JdIEV4ZWN1dGluZyBjb2RlIC0gTGl2ZSBQcmV2aWV3OiAke2lzTGl2ZVByZXZpZXd9YCk7XHJcbiAgICBzZXRFcnJvcignJyk7XHJcbiAgICBpZiAoIWlzTGl2ZVByZXZpZXcpIHtcclxuICAgICAgc2V0SXNFeGVjdXRpbmcodHJ1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gQ3JlYXRlIGEgc2FuZGJveGVkIGZ1bmN0aW9uIHRoYXQgY2FuIG9wdGlvbmFsbHkgcmV0dXJuIGNvbnRlbnRcclxuICAgICAgY29uc3QgZnVuYyA9IG5ldyBGdW5jdGlvbignTERyYXdCdWlsZGVyJywgJ0NvbG9ycycsIGNvZGUpO1xyXG4gICAgICBjb25zb2xlLmxvZygnW0xEcmF3Q29kZUVkaXRvcl0gQ29kZSBjb21waWxlZCBzdWNjZXNzZnVsbHknKTtcclxuXHJcbiAgICAgIC8vIENyZWF0ZSBhIHNwZWNpYWwgdmVyc2lvbiBvZiBMRHJhd0J1aWxkZXIgd2l0aCBzYXZlIG1ldGhvZFxyXG4gICAgICBjb25zdCBMRHJhd0J1aWxkZXIgPSBjcmVhdGVMRHJhd0J1aWxkZXJDbGFzcyhpc0xpdmVQcmV2aWV3KTtcclxuICAgICAgY29uc3QgQ29sb3JzID0ge1xyXG4gICAgICAgIEJMQUNLOiAwLFxyXG4gICAgICAgIEJMVUU6IDEsXHJcbiAgICAgICAgR1JFRU46IDIsXHJcbiAgICAgICAgREFSS19UVVJRVU9JU0U6IDMsXHJcbiAgICAgICAgUkVEOiA0LFxyXG4gICAgICAgIERBUktfUElOSzogNSxcclxuICAgICAgICBCUk9XTjogNixcclxuICAgICAgICBMSUdIVF9HUkFZOiA3LFxyXG4gICAgICAgIERBUktfR1JBWTogOCxcclxuICAgICAgICBMSUdIVF9CTFVFOiA5LFxyXG4gICAgICAgIEJSSUdIVF9HUkVFTjogMTAsXHJcbiAgICAgICAgTElHSFRfVFVSUVVPSVNFOiAxMSxcclxuICAgICAgICBTQUxNT046IDEyLFxyXG4gICAgICAgIFBJTks6IDEzLFxyXG4gICAgICAgIFlFTExPVzogMTQsXHJcbiAgICAgICAgV0hJVEU6IDE1LFxyXG4gICAgICAgIE1BSU5fQ09MT1I6IDE2LFxyXG4gICAgICAgIExJR0hUX0dSRUVOOiAxNyxcclxuICAgICAgICBMSUdIVF9ZRUxMT1c6IDE4LFxyXG4gICAgICAgIFRBTjogMTksXHJcbiAgICAgICAgTElHSFRfVklPTEVUOiAyMCxcclxuICAgICAgICBUUkFOU19DTEVBUjogNDcsXHJcbiAgICAgICAgVFJBTlNfUkVEOiAzNixcclxuICAgICAgICBUUkFOU19MSUdIVF9CTFVFOiA0M1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgY29uc3QgcmVzdWx0ID0gZnVuYyhMRHJhd0J1aWxkZXIsIENvbG9ycyk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdbTERyYXdDb2RlRWRpdG9yXSBDb2RlIGV4ZWN1dGlvbiByZXN1bHQgdHlwZTonLCB0eXBlb2YgcmVzdWx0KTtcclxuXHJcbiAgICAgIC8vIE9ubHkgcHJvY2VzcyBleHBsaWNpdCByZXR1cm5zIGZvciBsaXZlIHByZXZpZXdcclxuICAgICAgaWYgKGlzTGl2ZVByZXZpZXcgJiYgdHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnW0xEcmF3Q29kZUVkaXRvcl0gTGl2ZSBwcmV2aWV3IC0gZ2VuZXJhdGluZyBtb2RlbCwgY29udGVudCBsZW5ndGg6JywgcmVzdWx0Lmxlbmd0aCk7XHJcbiAgICAgICAgLy8gRm9yIGxpdmUgcHJldmlldywgYWx3YXlzIHVzZSBhIHRlbXAgZmlsZSBuYW1lIGFuZCBtYXJrIGFzIHByZXZpZXdcclxuICAgICAgICBvbk1vZGVsR2VuZXJhdGVkKHJlc3VsdCwgJ3ByZXZpZXdfdGVtcCcsIHRydWUpO1xyXG4gICAgICB9IGVsc2UgaWYgKCFpc0xpdmVQcmV2aWV3ICYmIHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgLy8gTWFudWFsIGdlbmVyYXRpb24gd2l0aCByZXR1cm4gc3RhdGVtZW50XHJcbiAgICAgICAgY29uc3Qgc2FuaXRpemVkRmlsZW5hbWUgPSBmaWxlbmFtZS50cmltKCkgfHwgJ2dlbmVyYXRlZF9tb2RlbCc7XHJcbiAgICAgICAgY29uc29sZS5sb2coYFtMRHJhd0NvZGVFZGl0b3JdIE1hbnVhbCBnZW5lcmF0aW9uIC0gc2F2aW5nIGFzICR7c2FuaXRpemVkRmlsZW5hbWV9YCk7XHJcbiAgICAgICAgb25Nb2RlbEdlbmVyYXRlZChyZXN1bHQsIHNhbml0aXplZEZpbGVuYW1lLCBmYWxzZSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0dlbmVyYXRlZCBMRHJhdyBtb2RlbCBzdWNjZXNzZnVsbHknKTtcclxuICAgICAgfSBlbHNlIGlmIChpc0xpdmVQcmV2aWV3ICYmIHR5cGVvZiByZXN1bHQgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1tMRHJhd0NvZGVFZGl0b3JdIExpdmUgcHJldmlldyAtIG5vIHJldHVybiB2YWx1ZSwgc2F2ZSgpIG1ldGhvZCBtYXkgaGF2ZSBiZWVuIGNhbGxlZCcpO1xyXG4gICAgICB9XHJcbiAgICAgIC8vIElmIG5vIHJldHVybiB2YWx1ZSwgdGhlIHNhdmUoKSBtZXRob2QgaGFuZGxlcyBpdCAoc2VlIGNyZWF0ZUxEcmF3QnVpbGRlckNsYXNzKVxyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIHNldEVycm9yKGVyciBpbnN0YW5jZW9mIEVycm9yID8gZXJyLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvciBvY2N1cnJlZCcpO1xyXG4gICAgICBpZiAoIWlzTGl2ZVByZXZpZXcpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdDb2RlIGV4ZWN1dGlvbiBlcnJvcjonLCBlcnIpO1xyXG4gICAgICB9XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICBpZiAoIWlzTGl2ZVByZXZpZXcpIHtcclxuICAgICAgICBzZXRJc0V4ZWN1dGluZyhmYWxzZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9O1xyXG5cclxuICAvLyBFZmZlY3QgZm9yIGxpdmUgcHJldmlldyB3aXRoIGRlYm91bmNpbmdcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKCFsaXZlUHJldmlldykge1xyXG4gICAgICBjb25zb2xlLmxvZygnW0xEcmF3Q29kZUVkaXRvcl0gTGl2ZSBwcmV2aWV3IGlzIGRpc2FibGVkLCBza2lwcGluZyBhdXRvLWV4ZWN1dGlvbicpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ1tMRHJhd0NvZGVFZGl0b3JdIENvZGUgY2hhbmdlZCwgc2V0dGluZyB1cCBkZWJvdW5jZSB0aW1lcicpO1xyXG5cclxuICAgIC8vIENsZWFyIHByZXZpb3VzIHRpbWVyXHJcbiAgICBpZiAoZGVib3VuY2VUaW1lclJlZi5jdXJyZW50KSB7XHJcbiAgICAgIGNsZWFyVGltZW91dChkZWJvdW5jZVRpbWVyUmVmLmN1cnJlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFNldCBuZXcgdGltZXIgZm9yIGRlYm91bmNlZCBleGVjdXRpb25cclxuICAgIGRlYm91bmNlVGltZXJSZWYuY3VycmVudCA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZygnW0xEcmF3Q29kZUVkaXRvcl0gRGVib3VuY2UgdGltZXIgZmlyZWQsIGV4ZWN1dGluZyBjb2RlJyk7XHJcbiAgICAgIGV4ZWN1dGVDb2RlKHRydWUpO1xyXG4gICAgfSwgNTAwMCk7IC8vIDEgc2Vjb25kIGRlbGF5IGFmdGVyIHVzZXIgc3RvcHMgdHlwaW5nXHJcblxyXG4gICAgLy8gQ2xlYW51cFxyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgaWYgKGRlYm91bmNlVGltZXJSZWYuY3VycmVudCkge1xyXG4gICAgICAgIGNsZWFyVGltZW91dChkZWJvdW5jZVRpbWVyUmVmLmN1cnJlbnQpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH0sIFtjb2RlLCBsaXZlUHJldmlld10pO1xyXG5cclxuICAvLyBJbml0aWFsIGV4ZWN1dGlvbiB3aGVuIGNvbXBvbmVudCBtb3VudHNcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ1tMRHJhd0NvZGVFZGl0b3JdIENvbXBvbmVudCBtb3VudGVkLCBsaXZlIHByZXZpZXc6JywgbGl2ZVByZXZpZXcpO1xyXG4gICAgaWYgKGxpdmVQcmV2aWV3KSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdbTERyYXdDb2RlRWRpdG9yXSBFeGVjdXRpbmcgaW5pdGlhbCBjb2RlJyk7XHJcbiAgICAgIGV4ZWN1dGVDb2RlKHRydWUpO1xyXG4gICAgfVxyXG4gIH0sIFtdKTtcclxuXHJcbiAgLy8gQ3JlYXRlIHRoZSBMRHJhd0J1aWxkZXIgY2xhc3MgaW4gdGhlIGJyb3dzZXJcclxuICBjb25zdCBjcmVhdGVMRHJhd0J1aWxkZXJDbGFzcyA9IChpc0xpdmVQcmV2aWV3OiBib29sZWFuKSA9PiB7XHJcbiAgICByZXR1cm4gY2xhc3MgTERyYXdCdWlsZGVyIHtcclxuICAgICAgcHJpdmF0ZSBlbGVtZW50czogYW55W10gPSBbXTtcclxuICAgICAgcHJpdmF0ZSBjdXJyZW50Q29sb3I6IG51bWJlciA9IDE2O1xyXG4gICAgICBwcml2YXRlIG1vZGVsTmFtZTogc3RyaW5nID0gJ1VudGl0bGVkIE1vZGVsJztcclxuICAgICAgcHJpdmF0ZSBhdXRob3I6IHN0cmluZyA9ICdBSSBCdWlsZGVyJztcclxuXHJcbiAgICAgIGNvbnN0cnVjdG9yKG1vZGVsTmFtZT86IHN0cmluZykge1xyXG4gICAgICAgIGlmIChtb2RlbE5hbWUpIHtcclxuICAgICAgICAgIHRoaXMubW9kZWxOYW1lID0gbW9kZWxOYW1lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgc2V0TW9kZWxOYW1lKG5hbWU6IHN0cmluZyk6IHRoaXMge1xyXG4gICAgICAgIHRoaXMubW9kZWxOYW1lID0gbmFtZTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgICAgfVxyXG5cclxuICAgICAgc2V0QXV0aG9yKGF1dGhvcjogc3RyaW5nKTogdGhpcyB7XHJcbiAgICAgICAgdGhpcy5hdXRob3IgPSBhdXRob3I7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHNldENvbG9yKGNvbG9yQ29kZTogbnVtYmVyKTogdGhpcyB7XHJcbiAgICAgICAgdGhpcy5jdXJyZW50Q29sb3IgPSBjb2xvckNvZGU7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGFkZFN0ZXAoKTogdGhpcyB7XHJcbiAgICAgICAgLy8gT25seSBhZGQgc3RlcCBpZiB0aGVyZSBhcmUgcGFydHMgc2luY2UgdGhlIGxhc3Qgc3RlcFxyXG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnRzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgIGNvbnN0IGxhc3RFbGVtZW50ID0gdGhpcy5lbGVtZW50c1t0aGlzLmVsZW1lbnRzLmxlbmd0aCAtIDFdO1xyXG4gICAgICAgICAgLy8gRG9uJ3QgYWRkIGR1cGxpY2F0ZSBzdGVwc1xyXG4gICAgICAgICAgaWYgKCEoJ2NvbW1hbmQnIGluIGxhc3RFbGVtZW50KSB8fCBsYXN0RWxlbWVudC5jb21tYW5kICE9PSAnU1RFUCcpIHtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50cy5wdXNoKHtcclxuICAgICAgICAgICAgICBsaW5lVHlwZTogMCxcclxuICAgICAgICAgICAgICBjb21tYW5kOiAnU1RFUCdcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBhZGRQYXJ0KFxyXG4gICAgICAgIHBhcnROdW06IHN0cmluZyxcclxuICAgICAgICBjb2xvcjogbnVtYmVyLFxyXG4gICAgICAgIHg6IG51bWJlciwgeTogbnVtYmVyLCB6OiBudW1iZXIsXHJcbiAgICAgICAgYTogbnVtYmVyID0gMSwgYjogbnVtYmVyID0gMCwgYzogbnVtYmVyID0gMCxcclxuICAgICAgICBkOiBudW1iZXIgPSAwLCBlOiBudW1iZXIgPSAxLCBmOiBudW1iZXIgPSAwLFxyXG4gICAgICAgIGc6IG51bWJlciA9IDAsIGg6IG51bWJlciA9IDAsIGk6IG51bWJlciA9IDFcclxuICAgICAgKTogdGhpcyB7XHJcbiAgICAgICAgdGhpcy5lbGVtZW50cy5wdXNoKHtcclxuICAgICAgICAgIGxpbmVUeXBlOiAxLFxyXG4gICAgICAgICAgY29sb3IsXHJcbiAgICAgICAgICB4LCB5LCB6LFxyXG4gICAgICAgICAgYSwgYiwgYyxcclxuICAgICAgICAgIGQsIGUsIGYsXHJcbiAgICAgICAgICBnLCBoLCBpLFxyXG4gICAgICAgICAgcGFydE5hbWU6IGAke3BhcnROdW19LmRhdGBcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgICAgfVxyXG5cclxuICAgICAgYWRkQnJpY2socGFydE51bTogc3RyaW5nLCBjb2xvcjogbnVtYmVyLCB4OiBudW1iZXIsIHk6IG51bWJlciwgejogbnVtYmVyKTogdGhpcyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYWRkUGFydChwYXJ0TnVtLCBjb2xvciwgeCwgeSwgeik7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGFkZFBsYXRlKHBhcnROdW06IHN0cmluZywgY29sb3I6IG51bWJlciwgeDogbnVtYmVyLCB5OiBudW1iZXIsIHo6IG51bWJlcik6IHRoaXMge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmFkZFBhcnQocGFydE51bSwgY29sb3IsIHgsIHksIHopO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBhZGRXaGVlbChwYXJ0TnVtOiBzdHJpbmcsIHg6IG51bWJlciwgeTogbnVtYmVyLCB6OiBudW1iZXIpOiB0aGlzIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hZGRQYXJ0KHBhcnROdW0sIDAsIHgsIHksIHopO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBhZGRQYXJ0Um90YXRlZFk5MChwYXJ0TnVtOiBzdHJpbmcsIGNvbG9yOiBudW1iZXIsIHg6IG51bWJlciwgeTogbnVtYmVyLCB6OiBudW1iZXIpOiB0aGlzIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hZGRQYXJ0KHBhcnROdW0sIGNvbG9yLCB4LCB5LCB6LFxyXG4gICAgICAgICAgMCwgMCwgLTEsXHJcbiAgICAgICAgICAwLCAxLCAwLFxyXG4gICAgICAgICAgMSwgMCwgMFxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGFkZFBhcnRSb3RhdGVkWDkwKHBhcnROdW06IHN0cmluZywgY29sb3I6IG51bWJlciwgeDogbnVtYmVyLCB5OiBudW1iZXIsIHo6IG51bWJlcik6IHRoaXMge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmFkZFBhcnQocGFydE51bSwgY29sb3IsIHgsIHksIHosXHJcbiAgICAgICAgICAxLCAwLCAwLFxyXG4gICAgICAgICAgMCwgMCwgLTEsXHJcbiAgICAgICAgICAwLCAxLCAwXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgZ2VuZXJhdGVMRHJhdygpOiBzdHJpbmcge1xyXG4gICAgICAgIGNvbnN0IGxpbmVzOiBzdHJpbmdbXSA9IFtdO1xyXG5cclxuICAgICAgICBsaW5lcy5wdXNoKGAwICR7dGhpcy5tb2RlbE5hbWV9YCk7XHJcbiAgICAgICAgbGluZXMucHVzaChgMCBOYW1lOiBnZW5lcmF0ZWQubGRyYCk7XHJcbiAgICAgICAgbGluZXMucHVzaChgMCBBdXRob3I6ICR7dGhpcy5hdXRob3J9YCk7XHJcbiAgICAgICAgbGluZXMucHVzaChgMCAhTElDRU5TRSBMaWNlbnNlZCB1bmRlciBDQyBCWSA0LjBgKTtcclxuICAgICAgICBsaW5lcy5wdXNoKCcnKTtcclxuICAgICAgICBsaW5lcy5wdXNoKCcwIEJGQyBDRVJUSUZZIENDVycpO1xyXG4gICAgICAgIGxpbmVzLnB1c2goJycpO1xyXG5cclxuICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgdGhpcy5lbGVtZW50cykge1xyXG4gICAgICAgICAgaWYgKCdjb21tYW5kJyBpbiBlbGVtZW50ICYmIGVsZW1lbnQuY29tbWFuZCA9PT0gJ1NURVAnKSB7XHJcbiAgICAgICAgICAgIC8vIEFkZCBzdGVwIG1hcmtlclxyXG4gICAgICAgICAgICBsaW5lcy5wdXNoKCcwIFNURVAnKTtcclxuICAgICAgICAgICAgbGluZXMucHVzaCgnJyk7IC8vIEFkZCBibGFuayBsaW5lIGFmdGVyIHN0ZXAgZm9yIHJlYWRhYmlsaXR5XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKCdwYXJ0TmFtZScgaW4gZWxlbWVudCkge1xyXG4gICAgICAgICAgICAvLyBBZGQgcGFydFxyXG4gICAgICAgICAgICBjb25zdCBsaW5lID0gYDEgJHtlbGVtZW50LmNvbG9yfSAke2VsZW1lbnQueH0gJHtlbGVtZW50Lnl9ICR7ZWxlbWVudC56fSAke2VsZW1lbnQuYX0gJHtlbGVtZW50LmJ9ICR7ZWxlbWVudC5jfSAke2VsZW1lbnQuZH0gJHtlbGVtZW50LmV9ICR7ZWxlbWVudC5mfSAke2VsZW1lbnQuZ30gJHtlbGVtZW50Lmh9ICR7ZWxlbWVudC5pfSAke2VsZW1lbnQucGFydE5hbWV9YDtcclxuICAgICAgICAgICAgbGluZXMucHVzaChsaW5lKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIEFkZCBmaW5hbCBzdGVwIGNvbW1hbmQgaWYgbm90IGFscmVhZHkgcHJlc2VudFxyXG4gICAgICAgIGNvbnN0IGxhc3RFbGVtZW50ID0gdGhpcy5lbGVtZW50c1t0aGlzLmVsZW1lbnRzLmxlbmd0aCAtIDFdO1xyXG4gICAgICAgIGlmICghbGFzdEVsZW1lbnQgfHwgISgnY29tbWFuZCcgaW4gbGFzdEVsZW1lbnQpIHx8IGxhc3RFbGVtZW50LmNvbW1hbmQgIT09ICdTVEVQJykge1xyXG4gICAgICAgICAgbGluZXMucHVzaCgnMCBTVEVQJyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxpbmVzLnB1c2goJycpO1xyXG5cclxuICAgICAgICByZXR1cm4gbGluZXMuam9pbignXFxuJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNsZWFyKCk6IHRoaXMge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudHMgPSBbXTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgICAgfVxyXG5cclxuICAgICAgZ2V0UGFydENvdW50KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudHMuZmlsdGVyKChlbDogYW55KSA9PiAncGFydE5hbWUnIGluIGVsKS5sZW5ndGg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGdldENvbnRlbnQoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZW5lcmF0ZUxEcmF3KCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHNhdmUoc2F2ZUZpbGVuYW1lPzogc3RyaW5nKTogdm9pZCB7XHJcbiAgICAgICAgLy8gSW4gYnJvd3NlciBjb250ZXh0LCBzYXZlIHRyaWdnZXJzIHRoZSBtb2RlbCBnZW5lcmF0aW9uXHJcbiAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMuZ2VuZXJhdGVMRHJhdygpO1xyXG4gICAgICAgIGNvbnN0IGZpbmFsRmlsZW5hbWUgPSBzYXZlRmlsZW5hbWUgfHwgZmlsZW5hbWUgfHwgJ2dlbmVyYXRlZF9tb2RlbCc7XHJcbiAgICAgICAgY29uc29sZS5sb2coYFtMRHJhd0J1aWxkZXIuc2F2ZV0gQ2FsbGVkIHdpdGggZmlsZW5hbWU6ICR7c2F2ZUZpbGVuYW1lfSwgaXNMaXZlUHJldmlldzogJHtpc0xpdmVQcmV2aWV3fWApO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGBbTERyYXdCdWlsZGVyLnNhdmVdIEdlbmVyYXRlZCBjb250ZW50IGxlbmd0aDogJHtjb250ZW50Lmxlbmd0aH1gKTtcclxuXHJcbiAgICAgICAgaWYgKCFpc0xpdmVQcmV2aWV3KSB7XHJcbiAgICAgICAgICAvLyBPbmx5IGFjdHVhbGx5IHNhdmUgd2hlbiBub3QgaW4gbGl2ZSBwcmV2aWV3IG1vZGVcclxuICAgICAgICAgIGNvbnNvbGUubG9nKGBbTERyYXdCdWlsZGVyLnNhdmVdIFNhdmluZyBtb2RlbCBhcyAke2ZpbmFsRmlsZW5hbWV9LmxkcmApO1xyXG4gICAgICAgICAgb25Nb2RlbEdlbmVyYXRlZChjb250ZW50LCBmaW5hbEZpbGVuYW1lLCBmYWxzZSk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhgTW9kZWwgc2F2ZWQgYXMgJHtmaW5hbEZpbGVuYW1lfS5sZHJgKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgLy8gSW4gbGl2ZSBwcmV2aWV3LCB1c2UgdGVtcCBmaWxlXHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnW0xEcmF3QnVpbGRlci5zYXZlXSBMaXZlIHByZXZpZXcgbW9kZSAtIHNhdmluZyB0byBwcmV2aWV3X3RlbXAnKTtcclxuICAgICAgICAgIG9uTW9kZWxHZW5lcmF0ZWQoY29udGVudCwgJ3ByZXZpZXdfdGVtcCcsIHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgIEBrZXlmcmFtZXMgcHVsc2Uge1xyXG4gICAgICAgICAgMCUge1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgNTAlIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMC4zO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgMTAwJSB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICBgfTwvc3R5bGU+XHJcbiAgICAgIDxkaXYgc3R5bGU9e3tcclxuICAgICAgICBkaXNwbGF5OiAnZmxleCcsXHJcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXHJcbiAgICAgICAgaGVpZ2h0OiAnMTAwJScsXHJcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzFlMWUxZScsXHJcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAnOHB4JyxcclxuICAgICAgICBvdmVyZmxvdzogJ2hpZGRlbidcclxuICAgICAgfX0+XHJcbiAgICAgIDxkaXYgc3R5bGU9e3tcclxuICAgICAgICBwYWRkaW5nOiAnMTBweCcsXHJcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzJkMmQyZCcsXHJcbiAgICAgICAgYm9yZGVyQm90dG9tOiAnMXB4IHNvbGlkICMzZTNlM2UnLFxyXG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxyXG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICAgIGdhcDogJzEwcHgnXHJcbiAgICAgIH19PlxyXG4gICAgICAgIDxoMyBzdHlsZT17eyBtYXJnaW46IDAsIGNvbG9yOiAnI2UwZTBlMCcsIGZvbnRTaXplOiAnMTRweCcsIGZsZXhTaHJpbms6IDAgfX0+XHJcbiAgICAgICAgICBMRHJhdyBDb2RlIEVkaXRvclxyXG4gICAgICAgIDwvaDM+XHJcblxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3tcclxuICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICAgICAgZ2FwOiAnMTBweCdcclxuICAgICAgICB9fT5cclxuICAgICAgICAgIDxsYWJlbCBzdHlsZT17e1xyXG4gICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXHJcbiAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICAgICAgICBnYXA6ICc2cHgnLFxyXG4gICAgICAgICAgICBjb2xvcjogJyNhMGEwYTAnLFxyXG4gICAgICAgICAgICBmb250U2l6ZTogJzEzcHgnLFxyXG4gICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJ1xyXG4gICAgICAgICAgfX0+XHJcbiAgICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICAgIHR5cGU9XCJjaGVja2JveFwiXHJcbiAgICAgICAgICAgICAgY2hlY2tlZD17bGl2ZVByZXZpZXd9XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRMaXZlUHJldmlldyhlLnRhcmdldC5jaGVja2VkKX1cclxuICAgICAgICAgICAgICBzdHlsZT17e1xyXG4gICAgICAgICAgICAgICAgY3Vyc29yOiAncG9pbnRlcidcclxuICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICBMaXZlIFByZXZpZXdcclxuICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIDxkaXYgc3R5bGU9e3tcclxuICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICAgICAgZ2FwOiAnOHB4JyxcclxuICAgICAgICAgIGZsZXg6IDEsXHJcbiAgICAgICAgICBtYXhXaWR0aDogJzQwMHB4J1xyXG4gICAgICAgIH19PlxyXG4gICAgICAgICAgPGxhYmVsIHN0eWxlPXt7XHJcbiAgICAgICAgICAgIGNvbG9yOiAnI2EwYTBhMCcsXHJcbiAgICAgICAgICAgIGZvbnRTaXplOiAnMTNweCcsXHJcbiAgICAgICAgICAgIGZsZXhTaHJpbms6IDBcclxuICAgICAgICAgIH19PlxyXG4gICAgICAgICAgICBGaWxlbmFtZTpcclxuICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICA8aW5wdXRcclxuICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4gICAgICAgICAgICB2YWx1ZT17ZmlsZW5hbWV9XHJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0RmlsZW5hbWUoZS50YXJnZXQudmFsdWUpfVxyXG4gICAgICAgICAgICBwbGFjZWhvbGRlcj1cIm15X21vZGVsXCJcclxuICAgICAgICAgICAgc3R5bGU9e3tcclxuICAgICAgICAgICAgICBmbGV4OiAxLFxyXG4gICAgICAgICAgICAgIHBhZGRpbmc6ICc0cHggOHB4JyxcclxuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMWUxZTFlJyxcclxuICAgICAgICAgICAgICBjb2xvcjogJyNkNGQ0ZDQnLFxyXG4gICAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCAjM2UzZTNlJyxcclxuICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6ICc0cHgnLFxyXG4gICAgICAgICAgICAgIGZvbnRTaXplOiAnMTNweCcsXHJcbiAgICAgICAgICAgICAgb3V0bGluZTogJ25vbmUnXHJcbiAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgIG9uRm9jdXM9eyhlKSA9PiBlLnRhcmdldC5zdHlsZS5ib3JkZXJDb2xvciA9ICcjMGU3NDkwJ31cclxuICAgICAgICAgICAgb25CbHVyPXsoZSkgPT4gZS50YXJnZXQuc3R5bGUuYm9yZGVyQ29sb3IgPSAnIzNlM2UzZSd9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICAgPHNwYW4gc3R5bGU9e3tcclxuICAgICAgICAgICAgY29sb3I6ICcjNzA3MDcwJyxcclxuICAgICAgICAgICAgZm9udFNpemU6ICcxM3B4J1xyXG4gICAgICAgICAgfX0+XHJcbiAgICAgICAgICAgIC5sZHJcclxuICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gZXhlY3V0ZUNvZGUoZmFsc2UpfVxyXG4gICAgICAgICAgZGlzYWJsZWQ9e2lzRXhlY3V0aW5nIHx8IGxpdmVQcmV2aWV3fVxyXG4gICAgICAgICAgc3R5bGU9e3tcclxuICAgICAgICAgICAgcGFkZGluZzogJzZweCAxMnB4JyxcclxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAoaXNFeGVjdXRpbmcgfHwgbGl2ZVByZXZpZXcpID8gJyM0YTRhNGEnIDogJyMwZTc0OTAnLFxyXG4gICAgICAgICAgICBjb2xvcjogJ3doaXRlJyxcclxuICAgICAgICAgICAgYm9yZGVyOiAnbm9uZScsXHJcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzRweCcsXHJcbiAgICAgICAgICAgIGN1cnNvcjogKGlzRXhlY3V0aW5nIHx8IGxpdmVQcmV2aWV3KSA/ICdub3QtYWxsb3dlZCcgOiAncG9pbnRlcicsXHJcbiAgICAgICAgICAgIGZvbnRTaXplOiAnMTRweCcsXHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246ICdiYWNrZ3JvdW5kLWNvbG9yIDAuMnMnLFxyXG4gICAgICAgICAgICBvcGFjaXR5OiBsaXZlUHJldmlldyA/IDAuNSA6IDFcclxuICAgICAgICAgIH19XHJcbiAgICAgICAgICBvbk1vdXNlRW50ZXI9eyhlKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghaXNFeGVjdXRpbmcgJiYgIWxpdmVQcmV2aWV3KSB7XHJcbiAgICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjMDg5MWIyJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfX1cclxuICAgICAgICAgIG9uTW91c2VMZWF2ZT17KGUpID0+IHtcclxuICAgICAgICAgICAgaWYgKCFpc0V4ZWN1dGluZyAmJiAhbGl2ZVByZXZpZXcpIHtcclxuICAgICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyMwZTc0OTAnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9fVxyXG4gICAgICAgICAgdGl0bGU9e2xpdmVQcmV2aWV3ID8gJ0Rpc2FibGUgbGl2ZSBwcmV2aWV3IHRvIG1hbnVhbGx5IGdlbmVyYXRlJyA6ICcnfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtpc0V4ZWN1dGluZyA/ICdHZW5lcmF0aW5nLi4uJyA6ICfilrYgR2VuZXJhdGUgTW9kZWwnfVxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICA8L2Rpdj5cclxuXHJcbiAgICAgIDxkaXYgc3R5bGU9e3tcclxuICAgICAgICBmbGV4OiAxLFxyXG4gICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxyXG4gICAgICAgIG92ZXJmbG93OiAnYXV0bydcclxuICAgICAgfX0+XHJcbiAgICAgICAgPHRleHRhcmVhXHJcbiAgICAgICAgICByZWY9e3RleHRhcmVhUmVmfVxyXG4gICAgICAgICAgdmFsdWU9e2NvZGV9XHJcbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldENvZGUoZS50YXJnZXQudmFsdWUpfVxyXG4gICAgICAgICAgb25LZXlEb3duPXtoYW5kbGVLZXlEb3dufVxyXG4gICAgICAgICAgc3BlbGxDaGVjaz17ZmFsc2V9XHJcbiAgICAgICAgICBzdHlsZT17e1xyXG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxyXG4gICAgICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcclxuICAgICAgICAgICAgcGFkZGluZzogJzEycHgnLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMWUxZTFlJyxcclxuICAgICAgICAgICAgY29sb3I6ICcjZDRkNGQ0JyxcclxuICAgICAgICAgICAgYm9yZGVyOiAnbm9uZScsXHJcbiAgICAgICAgICAgIG91dGxpbmU6ICdub25lJyxcclxuICAgICAgICAgICAgZm9udEZhbWlseTogJ0NvbnNvbGFzLCBNb25hY28sIFwiQ291cmllciBOZXdcIiwgbW9ub3NwYWNlJyxcclxuICAgICAgICAgICAgZm9udFNpemU6ICcxM3B4JyxcclxuICAgICAgICAgICAgbGluZUhlaWdodDogJzEuNScsXHJcbiAgICAgICAgICAgIHJlc2l6ZTogJ25vbmUnLFxyXG4gICAgICAgICAgICB0YWJTaXplOiAyXHJcbiAgICAgICAgICB9fVxyXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJXcml0ZSB5b3VyIExEcmF3IGdlbmVyYXRpb24gY29kZSBoZXJlLi4uXCJcclxuICAgICAgICAvPlxyXG4gICAgICA8L2Rpdj5cclxuXHJcbiAgICAgIHtlcnJvciAmJiAoXHJcbiAgICAgICAgPGRpdiBzdHlsZT17e1xyXG4gICAgICAgICAgcGFkZGluZzogJzEwcHgnLFxyXG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzNlMWUxZScsXHJcbiAgICAgICAgICBib3JkZXJUb3A6ICcxcHggc29saWQgIzVlMmUyZScsXHJcbiAgICAgICAgICBjb2xvcjogJyNmODcxNzEnLFxyXG4gICAgICAgICAgZm9udFNpemU6ICcxMnB4JyxcclxuICAgICAgICAgIGZvbnRGYW1pbHk6ICdDb25zb2xhcywgTW9uYWNvLCBcIkNvdXJpZXIgTmV3XCIsIG1vbm9zcGFjZSdcclxuICAgICAgICB9fT5cclxuICAgICAgICAgIEVycm9yOiB7ZXJyb3J9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcblxyXG4gICAgICB7bGl2ZVByZXZpZXcgJiYgIWVycm9yICYmIChcclxuICAgICAgICA8ZGl2IHN0eWxlPXt7XHJcbiAgICAgICAgICBwYWRkaW5nOiAnOHB4JyxcclxuICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMxZTNlMWUnLFxyXG4gICAgICAgICAgYm9yZGVyVG9wOiAnMXB4IHNvbGlkICMyZTVlMmUnLFxyXG4gICAgICAgICAgY29sb3I6ICcjNzFmODcxJyxcclxuICAgICAgICAgIGZvbnRTaXplOiAnMTFweCcsXHJcbiAgICAgICAgICBmb250RmFtaWx5OiAnQ29uc29sYXMsIE1vbmFjbywgXCJDb3VyaWVyIE5ld1wiLCBtb25vc3BhY2UnLFxyXG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICAgICAgICBnYXA6ICc2cHgnXHJcbiAgICAgICAgfX0+XHJcbiAgICAgICAgICA8c3BhbiBzdHlsZT17e1xyXG4gICAgICAgICAgICBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJyxcclxuICAgICAgICAgICAgd2lkdGg6ICc4cHgnLFxyXG4gICAgICAgICAgICBoZWlnaHQ6ICc4cHgnLFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjNzFmODcxJyxcclxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnNTAlJyxcclxuICAgICAgICAgICAgYW5pbWF0aW9uOiAncHVsc2UgMnMgaW5maW5pdGUnXHJcbiAgICAgICAgICB9fT48L3NwYW4+XHJcbiAgICAgICAgICBMaXZlIHByZXZpZXcgZW5hYmxlZCAtIE1vZGVsIHVwZGF0ZXMgYXMgeW91IHR5cGVcclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKX1cclxuICAgICAgPC9kaXY+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTERyYXdDb2RlRWRpdG9yOyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlUmVmIiwidXNlRWZmZWN0IiwiTERyYXdDb2RlRWRpdG9yIiwib25Nb2RlbEdlbmVyYXRlZCIsImZpbGVuYW1lIiwic2V0RmlsZW5hbWUiLCJsaXZlUHJldmlldyIsInNldExpdmVQcmV2aWV3IiwiY29kZSIsInNldENvZGUiLCJlcnJvciIsInNldEVycm9yIiwiaXNFeGVjdXRpbmciLCJzZXRJc0V4ZWN1dGluZyIsInRleHRhcmVhUmVmIiwiZGVib3VuY2VUaW1lclJlZiIsImhhbmRsZUtleURvd24iLCJlIiwia2V5IiwicHJldmVudERlZmF1bHQiLCJzdGFydCIsImN1cnJlbnRUYXJnZXQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsIm5ld0NvZGUiLCJzdWJzdHJpbmciLCJzZXRUaW1lb3V0IiwiY3VycmVudCIsImV4ZWN1dGVDb2RlIiwiaXNMaXZlUHJldmlldyIsImNvbnNvbGUiLCJsb2ciLCJmdW5jIiwiRnVuY3Rpb24iLCJMRHJhd0J1aWxkZXIiLCJjcmVhdGVMRHJhd0J1aWxkZXJDbGFzcyIsIkNvbG9ycyIsIkJMQUNLIiwiQkxVRSIsIkdSRUVOIiwiREFSS19UVVJRVU9JU0UiLCJSRUQiLCJEQVJLX1BJTksiLCJCUk9XTiIsIkxJR0hUX0dSQVkiLCJEQVJLX0dSQVkiLCJMSUdIVF9CTFVFIiwiQlJJR0hUX0dSRUVOIiwiTElHSFRfVFVSUVVPSVNFIiwiU0FMTU9OIiwiUElOSyIsIllFTExPVyIsIldISVRFIiwiTUFJTl9DT0xPUiIsIkxJR0hUX0dSRUVOIiwiTElHSFRfWUVMTE9XIiwiVEFOIiwiTElHSFRfVklPTEVUIiwiVFJBTlNfQ0xFQVIiLCJUUkFOU19SRUQiLCJUUkFOU19MSUdIVF9CTFVFIiwicmVzdWx0IiwibGVuZ3RoIiwic2FuaXRpemVkRmlsZW5hbWUiLCJ0cmltIiwiZXJyIiwiRXJyb3IiLCJtZXNzYWdlIiwiY2xlYXJUaW1lb3V0Iiwic2V0TW9kZWxOYW1lIiwibmFtZSIsIm1vZGVsTmFtZSIsInNldEF1dGhvciIsImF1dGhvciIsInNldENvbG9yIiwiY29sb3JDb2RlIiwiY3VycmVudENvbG9yIiwiYWRkU3RlcCIsImVsZW1lbnRzIiwibGFzdEVsZW1lbnQiLCJjb21tYW5kIiwicHVzaCIsImxpbmVUeXBlIiwiYWRkUGFydCIsInBhcnROdW0iLCJjb2xvciIsIngiLCJ5IiwieiIsImEiLCJiIiwiYyIsImQiLCJmIiwiZyIsImgiLCJpIiwicGFydE5hbWUiLCJhZGRCcmljayIsImFkZFBsYXRlIiwiYWRkV2hlZWwiLCJhZGRQYXJ0Um90YXRlZFk5MCIsImFkZFBhcnRSb3RhdGVkWDkwIiwiZ2VuZXJhdGVMRHJhdyIsImxpbmVzIiwiZWxlbWVudCIsImxpbmUiLCJqb2luIiwiY2xlYXIiLCJnZXRQYXJ0Q291bnQiLCJmaWx0ZXIiLCJlbCIsImdldENvbnRlbnQiLCJzYXZlIiwic2F2ZUZpbGVuYW1lIiwiY29udGVudCIsImZpbmFsRmlsZW5hbWUiLCJkaXYiLCJzdHlsZSIsImRpc3BsYXkiLCJmbGV4RGlyZWN0aW9uIiwiaGVpZ2h0IiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyUmFkaXVzIiwib3ZlcmZsb3ciLCJwYWRkaW5nIiwiYm9yZGVyQm90dG9tIiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwiZ2FwIiwiaDMiLCJtYXJnaW4iLCJmb250U2l6ZSIsImZsZXhTaHJpbmsiLCJsYWJlbCIsImN1cnNvciIsImlucHV0IiwidHlwZSIsImNoZWNrZWQiLCJvbkNoYW5nZSIsInRhcmdldCIsImZsZXgiLCJtYXhXaWR0aCIsInZhbHVlIiwicGxhY2Vob2xkZXIiLCJib3JkZXIiLCJvdXRsaW5lIiwib25Gb2N1cyIsImJvcmRlckNvbG9yIiwib25CbHVyIiwic3BhbiIsImJ1dHRvbiIsIm9uQ2xpY2siLCJkaXNhYmxlZCIsInRyYW5zaXRpb24iLCJvcGFjaXR5Iiwib25Nb3VzZUVudGVyIiwib25Nb3VzZUxlYXZlIiwidGl0bGUiLCJwb3NpdGlvbiIsInRleHRhcmVhIiwicmVmIiwib25LZXlEb3duIiwic3BlbGxDaGVjayIsIndpZHRoIiwiZm9udEZhbWlseSIsImxpbmVIZWlnaHQiLCJyZXNpemUiLCJ0YWJTaXplIiwiYm9yZGVyVG9wIiwiYW5pbWF0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/LDrawCodeEditor.tsx\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/client-only/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/client-only/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {



/***/ }),

/***/ "(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/styled-jsx/dist/index/index.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n__webpack_require__(/*! client-only */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\nvar React = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\nfunction _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n        'default': e\n    };\n}\nvar React__default = /*#__PURE__*/ _interopDefaultLegacy(React);\n_c = React__default;\n/*\nBased on Glamor's sheet\nhttps://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js\n*/ function _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nvar isProd = typeof process !== \"undefined\" && process.env && \"development\" === \"production\";\nvar isString = function(o) {\n    return Object.prototype.toString.call(o) === \"[object String]\";\n};\nvar StyleSheet = /*#__PURE__*/ function() {\n    function StyleSheet(param) {\n        var ref = param === void 0 ? {} : param, _name = ref.name, name = _name === void 0 ? \"stylesheet\" : _name, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? isProd : _optimizeForSpeed;\n        invariant$1(isString(name), \"`name` must be a string\");\n        this._name = name;\n        this._deletedRulePlaceholder = \"#\" + name + \"-deleted-rule____{}\";\n        invariant$1(typeof optimizeForSpeed === \"boolean\", \"`optimizeForSpeed` must be a boolean\");\n        this._optimizeForSpeed = optimizeForSpeed;\n        this._serverSheet = undefined;\n        this._tags = [];\n        this._injected = false;\n        this._rulesCount = 0;\n        var node =  true && document.querySelector('meta[property=\"csp-nonce\"]');\n        this._nonce = node ? node.getAttribute(\"content\") : null;\n    }\n    var _proto = StyleSheet.prototype;\n    _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {\n        invariant$1(typeof bool === \"boolean\", \"`setOptimizeForSpeed` accepts a boolean\");\n        invariant$1(this._rulesCount === 0, \"optimizeForSpeed cannot be when rules have already been inserted\");\n        this.flush();\n        this._optimizeForSpeed = bool;\n        this.inject();\n    };\n    _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {\n        return this._optimizeForSpeed;\n    };\n    _proto.inject = function inject() {\n        var _this = this;\n        invariant$1(!this._injected, \"sheet already injected\");\n        this._injected = true;\n        if ( true && this._optimizeForSpeed) {\n            this._tags[0] = this.makeStyleTag(this._name);\n            this._optimizeForSpeed = \"insertRule\" in this.getSheet();\n            if (!this._optimizeForSpeed) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.\");\n                }\n                this.flush();\n                this._injected = true;\n            }\n            return;\n        }\n        this._serverSheet = {\n            cssRules: [],\n            insertRule: function(rule, index) {\n                if (typeof index === \"number\") {\n                    _this._serverSheet.cssRules[index] = {\n                        cssText: rule\n                    };\n                } else {\n                    _this._serverSheet.cssRules.push({\n                        cssText: rule\n                    });\n                }\n                return index;\n            },\n            deleteRule: function(index) {\n                _this._serverSheet.cssRules[index] = null;\n            }\n        };\n    };\n    _proto.getSheetForTag = function getSheetForTag(tag) {\n        if (tag.sheet) {\n            return tag.sheet;\n        }\n        // this weirdness brought to you by firefox\n        for(var i = 0; i < document.styleSheets.length; i++){\n            if (document.styleSheets[i].ownerNode === tag) {\n                return document.styleSheets[i];\n            }\n        }\n    };\n    _proto.getSheet = function getSheet() {\n        return this.getSheetForTag(this._tags[this._tags.length - 1]);\n    };\n    _proto.insertRule = function insertRule(rule, index) {\n        invariant$1(isString(rule), \"`insertRule` accepts only strings\");\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            var sheet = this.getSheet();\n            if (typeof index !== \"number\") {\n                index = sheet.cssRules.length;\n            }\n            // this weirdness for perf, and chrome's weird bug\n            // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                return -1;\n            }\n        } else {\n            var insertionPoint = this._tags[index];\n            this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));\n        }\n        return this._rulesCount++;\n    };\n    _proto.replaceRule = function replaceRule(index, rule) {\n        if (this._optimizeForSpeed || \"object\" === \"undefined\") {\n            var sheet =  true ? this.getSheet() : 0;\n            if (!rule.trim()) {\n                rule = this._deletedRulePlaceholder;\n            }\n            if (!sheet.cssRules[index]) {\n                // @TBD Should we throw an error?\n                return index;\n            }\n            sheet.deleteRule(index);\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                // In order to preserve the indices we insert a deleteRulePlaceholder\n                sheet.insertRule(this._deletedRulePlaceholder, index);\n            }\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"old rule at index `\" + index + \"` not found\");\n            tag.textContent = rule;\n        }\n        return index;\n    };\n    _proto.deleteRule = function deleteRule(index) {\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            this.replaceRule(index, \"\");\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"rule at index `\" + index + \"` not found\");\n            tag.parentNode.removeChild(tag);\n            this._tags[index] = null;\n        }\n    };\n    _proto.flush = function flush() {\n        this._injected = false;\n        this._rulesCount = 0;\n        if (true) {\n            this._tags.forEach(function(tag) {\n                return tag && tag.parentNode.removeChild(tag);\n            });\n            this._tags = [];\n        } else {}\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        if (false) {}\n        return this._tags.reduce(function(rules, tag) {\n            if (tag) {\n                rules = rules.concat(Array.prototype.map.call(_this.getSheetForTag(tag).cssRules, function(rule) {\n                    return rule.cssText === _this._deletedRulePlaceholder ? null : rule;\n                }));\n            } else {\n                rules.push(null);\n            }\n            return rules;\n        }, []);\n    };\n    _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {\n        if (cssString) {\n            invariant$1(isString(cssString), \"makeStyleTag accepts only strings as second parameter\");\n        }\n        var tag = document.createElement(\"style\");\n        if (this._nonce) tag.setAttribute(\"nonce\", this._nonce);\n        tag.type = \"text/css\";\n        tag.setAttribute(\"data-\" + name, \"\");\n        if (cssString) {\n            tag.appendChild(document.createTextNode(cssString));\n        }\n        var head = document.head || document.getElementsByTagName(\"head\")[0];\n        if (relativeToTag) {\n            head.insertBefore(tag, relativeToTag);\n        } else {\n            head.appendChild(tag);\n        }\n        return tag;\n    };\n    _createClass(StyleSheet, [\n        {\n            key: \"length\",\n            get: function get() {\n                return this._rulesCount;\n            }\n        }\n    ]);\n    return StyleSheet;\n}();\nfunction invariant$1(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheet: \" + message + \".\");\n    }\n}\nfunction hash(str) {\n    var _$hash = 5381, i = str.length;\n    while(i){\n        _$hash = _$hash * 33 ^ str.charCodeAt(--i);\n    }\n    /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */ return _$hash >>> 0;\n}\nvar stringHash = hash;\nvar sanitize = function(rule) {\n    return rule.replace(/\\/style/gi, \"\\\\/style\");\n};\nvar cache = {};\n/**\n * computeId\n *\n * Compute and memoize a jsx id from a basedId and optionally props.\n */ function computeId(baseId, props) {\n    if (!props) {\n        return \"jsx-\" + baseId;\n    }\n    var propsToString = String(props);\n    var key = baseId + propsToString;\n    if (!cache[key]) {\n        cache[key] = \"jsx-\" + stringHash(baseId + \"-\" + propsToString);\n    }\n    return cache[key];\n}\n/**\n * computeSelector\n *\n * Compute and memoize dynamic selectors.\n */ function computeSelector(id, css) {\n    var selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;\n    // Sanitize SSR-ed CSS.\n    // Client side code doesn't need to be sanitized since we use\n    // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).\n    if (false) {}\n    var idcss = id + css;\n    if (!cache[idcss]) {\n        cache[idcss] = css.replace(selectoPlaceholderRegexp, id);\n    }\n    return cache[idcss];\n}\nfunction mapRulesToStyle(cssRules, options) {\n    if (options === void 0) options = {};\n    return cssRules.map(function(args) {\n        var id = args[0];\n        var css = args[1];\n        return /*#__PURE__*/ React__default[\"default\"].createElement(\"style\", {\n            id: \"__\" + id,\n            // Avoid warnings upon render with a key\n            key: \"__\" + id,\n            nonce: options.nonce ? options.nonce : undefined,\n            dangerouslySetInnerHTML: {\n                __html: css\n            }\n        });\n    });\n}\nvar StyleSheetRegistry = /*#__PURE__*/ function() {\n    function StyleSheetRegistry(param) {\n        var ref = param === void 0 ? {} : param, _styleSheet = ref.styleSheet, styleSheet = _styleSheet === void 0 ? null : _styleSheet, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? false : _optimizeForSpeed;\n        this._sheet = styleSheet || new StyleSheet({\n            name: \"styled-jsx\",\n            optimizeForSpeed: optimizeForSpeed\n        });\n        this._sheet.inject();\n        if (styleSheet && typeof optimizeForSpeed === \"boolean\") {\n            this._sheet.setOptimizeForSpeed(optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    }\n    var _proto = StyleSheetRegistry.prototype;\n    _proto.add = function add(props) {\n        var _this = this;\n        if (undefined === this._optimizeForSpeed) {\n            this._optimizeForSpeed = Array.isArray(props.children);\n            this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        if ( true && !this._fromServer) {\n            this._fromServer = this.selectFromServer();\n            this._instancesCounts = Object.keys(this._fromServer).reduce(function(acc, tagName) {\n                acc[tagName] = 0;\n                return acc;\n            }, {});\n        }\n        var ref = this.getIdAndRules(props), styleId = ref.styleId, rules = ref.rules;\n        // Deduping: just increase the instances count.\n        if (styleId in this._instancesCounts) {\n            this._instancesCounts[styleId] += 1;\n            return;\n        }\n        var indices = rules.map(function(rule) {\n            return _this._sheet.insertRule(rule);\n        }) // Filter out invalid rules\n        .filter(function(index) {\n            return index !== -1;\n        });\n        this._indices[styleId] = indices;\n        this._instancesCounts[styleId] = 1;\n    };\n    _proto.remove = function remove(props) {\n        var _this = this;\n        var styleId = this.getIdAndRules(props).styleId;\n        invariant(styleId in this._instancesCounts, \"styleId: `\" + styleId + \"` not found\");\n        this._instancesCounts[styleId] -= 1;\n        if (this._instancesCounts[styleId] < 1) {\n            var tagFromServer = this._fromServer && this._fromServer[styleId];\n            if (tagFromServer) {\n                tagFromServer.parentNode.removeChild(tagFromServer);\n                delete this._fromServer[styleId];\n            } else {\n                this._indices[styleId].forEach(function(index) {\n                    return _this._sheet.deleteRule(index);\n                });\n                delete this._indices[styleId];\n            }\n            delete this._instancesCounts[styleId];\n        }\n    };\n    _proto.update = function update(props, nextProps) {\n        this.add(nextProps);\n        this.remove(props);\n    };\n    _proto.flush = function flush() {\n        this._sheet.flush();\n        this._sheet.inject();\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        var fromServer = this._fromServer ? Object.keys(this._fromServer).map(function(styleId) {\n            return [\n                styleId,\n                _this._fromServer[styleId]\n            ];\n        }) : [];\n        var cssRules = this._sheet.cssRules();\n        return fromServer.concat(Object.keys(this._indices).map(function(styleId) {\n            return [\n                styleId,\n                _this._indices[styleId].map(function(index) {\n                    return cssRules[index].cssText;\n                }).join(_this._optimizeForSpeed ? \"\" : \"\\n\")\n            ];\n        }) // filter out empty rules\n        .filter(function(rule) {\n            return Boolean(rule[1]);\n        }));\n    };\n    _proto.styles = function styles(options) {\n        return mapRulesToStyle(this.cssRules(), options);\n    };\n    _proto.getIdAndRules = function getIdAndRules(props) {\n        var css = props.children, dynamic = props.dynamic, id = props.id;\n        if (dynamic) {\n            var styleId = computeId(id, dynamic);\n            return {\n                styleId: styleId,\n                rules: Array.isArray(css) ? css.map(function(rule) {\n                    return computeSelector(styleId, rule);\n                }) : [\n                    computeSelector(styleId, css)\n                ]\n            };\n        }\n        return {\n            styleId: computeId(id),\n            rules: Array.isArray(css) ? css : [\n                css\n            ]\n        };\n    };\n    /**\n   * selectFromServer\n   *\n   * Collects style tags from the document with id __jsx-XXX\n   */ _proto.selectFromServer = function selectFromServer() {\n        var elements = Array.prototype.slice.call(document.querySelectorAll('[id^=\"__jsx-\"]'));\n        return elements.reduce(function(acc, element) {\n            var id = element.id.slice(2);\n            acc[id] = element;\n            return acc;\n        }, {});\n    };\n    return StyleSheetRegistry;\n}();\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheetRegistry: \" + message + \".\");\n    }\n}\nvar StyleSheetContext = /*#__PURE__*/ React.createContext(null);\nStyleSheetContext.displayName = \"StyleSheetContext\";\nfunction createStyleRegistry() {\n    return new StyleSheetRegistry();\n}\nfunction StyleRegistry(param) {\n    _s();\n    var configuredRegistry = param.registry, children = param.children;\n    var rootRegistry = React.useContext(StyleSheetContext);\n    var ref = React.useState({\n        \"StyleRegistry.useState[ref]\": function() {\n            return rootRegistry || configuredRegistry || createStyleRegistry();\n        }\n    }[\"StyleRegistry.useState[ref]\"]), registry = ref[0];\n    return /*#__PURE__*/ React__default[\"default\"].createElement(StyleSheetContext.Provider, {\n        value: registry\n    }, children);\n}\n_s(StyleRegistry, \"F6PIZFsaWgcE6rBNmd+Zkq3zRoY=\");\n_c1 = StyleRegistry;\nfunction useStyleRegistry() {\n    _s1();\n    return React.useContext(StyleSheetContext);\n}\n_s1(useStyleRegistry, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// Opt-into the new `useInsertionEffect` API in React 18, fallback to `useLayoutEffect`.\n// https://github.com/reactwg/react-18/discussions/110\nvar useInsertionEffect = React__default[\"default\"].useInsertionEffect || React__default[\"default\"].useLayoutEffect;\nvar defaultRegistry =  true ? createStyleRegistry() : 0;\nfunction JSXStyle(props) {\n    _s2();\n    var registry = defaultRegistry ? defaultRegistry : useStyleRegistry();\n    // If `registry` does not exist, we do nothing here.\n    if (!registry) {\n        return null;\n    }\n    if (false) {}\n    useInsertionEffect({\n        \"JSXStyle.useInsertionEffect\": function() {\n            registry.add(props);\n            return ({\n                \"JSXStyle.useInsertionEffect\": function() {\n                    registry.remove(props);\n                }\n            })[\"JSXStyle.useInsertionEffect\"];\n        // props.children can be string[], will be striped since id is identical\n        }\n    }[\"JSXStyle.useInsertionEffect\"], [\n        props.id,\n        String(props.dynamic)\n    ]);\n    return null;\n}\n_s2(JSXStyle, \"48Sqj1BUqkshsPdz6NEWXDn8pF4=\", false, function() {\n    return [\n        useStyleRegistry,\n        useInsertionEffect\n    ];\n});\n_c2 = JSXStyle;\nJSXStyle.dynamic = function(info) {\n    return info.map(function(tagInfo) {\n        var baseId = tagInfo[0];\n        var props = tagInfo[1];\n        return computeId(baseId, props);\n    }).join(\" \");\n};\nexports.StyleRegistry = StyleRegistry;\nexports.createStyleRegistry = createStyleRegistry;\nexports.style = JSXStyle;\nexports.useStyleRegistry = useStyleRegistry;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"React__default\");\n$RefreshReg$(_c1, \"StyleRegistry\");\n$RefreshReg$(_c2, \"JSXStyle\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/styled-jsx/style.js":
/*!******************************************!*\
  !*** ./node_modules/styled-jsx/style.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = __webpack_require__(/*! ./dist/index */ \"(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js\").style;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdHlsZWQtanN4L3N0eWxlLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsbUlBQThDIiwic291cmNlcyI6WyIvVXNlcnMvZ25vbWUvbGVnby9icmlja3lhcmQvbm9kZV9tb2R1bGVzL3N0eWxlZC1qc3gvc3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvaW5kZXgnKS5zdHlsZVxuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIiwic3R5bGUiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/styled-jsx/style.js\n"));

/***/ })

}]);